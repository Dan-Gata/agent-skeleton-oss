<!DOCTYPE html>
<html lang="fr" data-theme="dark">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Connexion - Agent Skeleton OSS</title>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" rel="stylesheet">
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap" rel="stylesheet">
    
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        :root {
            --bg-primary: #0a0a0a;
            --bg-secondary: #1a1a1a;
            --bg-tertiary: #262626;
            --bg-card: #1e1e1e;
            --accent-primary: #3b82f6;
            --accent-secondary: #8b5cf6;
            --accent-success: #10b981;
            --accent-danger: #ef4444;
            --text-primary: #ffffff;
            --text-secondary: #a1a1aa;
            --text-muted: #71717a;
            --border-color: #404040;
            --gradient-primary: linear-gradient(135deg, #3b82f6, #8b5cf6);
        }

        body {
            font-family: 'Inter', -apple-system, BlinkMacSystemFont, sans-serif;
            background: var(--bg-primary);
            color: var(--text-primary);
            height: 100vh;
            display: flex;
            align-items: center;
            justify-content: center;
            padding: 20px;
        }

        .login-container {
            width: 100%;
            max-width: 400px;
            background: var(--bg-card);
            border: 1px solid var(--border-color);
            border-radius: 16px;
            padding: 32px;
            box-shadow: 0 20px 40px rgba(0, 0, 0, 0.3);
        }

        .logo-section {
            text-align: center;
            margin-bottom: 32px;
        }

        .logo-icon {
            width: 64px;
            height: 64px;
            border-radius: 16px;
            background: var(--gradient-primary);
            display: flex;
            align-items: center;
            justify-content: center;
            margin: 0 auto 16px;
            font-size: 24px;
            color: white;
        }

        .logo-title {
            font-size: 24px;
            font-weight: 700;
            margin-bottom: 8px;
            background: var(--gradient-primary);
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            background-clip: text;
        }

        .logo-subtitle {
            color: var(--text-secondary);
            font-size: 14px;
        }

        .form-group {
            margin-bottom: 20px;
        }

        .form-label {
            display: block;
            margin-bottom: 8px;
            font-weight: 500;
            color: var(--text-primary);
        }

        .form-input {
            width: 100%;
            padding: 12px 16px;
            border: 1px solid var(--border-color);
            border-radius: 8px;
            background: var(--bg-tertiary);
            color: var(--text-primary);
            font-size: 14px;
            transition: all 0.2s ease;
        }

        .form-input:focus {
            outline: none;
            border-color: var(--accent-primary);
            box-shadow: 0 0 0 3px rgba(59, 130, 246, 0.1);
        }

        .form-button {
            width: 100%;
            padding: 12px;
            background: var(--gradient-primary);
            border: none;
            border-radius: 8px;
            color: white;
            font-size: 14px;
            font-weight: 600;
            cursor: pointer;
            transition: all 0.2s ease;
            margin-bottom: 16px;
        }

        .form-button:hover {
            transform: translateY(-1px);
            box-shadow: 0 8px 25px rgba(59, 130, 246, 0.3);
        }

        .form-button:disabled {
            opacity: 0.6;
            cursor: not-allowed;
            transform: none;
        }

        .switch-mode {
            text-align: center;
            margin-top: 20px;
        }

        .switch-link {
            color: var(--accent-primary);
            text-decoration: none;
            font-size: 14px;
            cursor: pointer;
        }

        .switch-link:hover {
            text-decoration: underline;
        }

        .error-message {
            background: rgba(239, 68, 68, 0.1);
            border: 1px solid var(--accent-danger);
            color: var(--accent-danger);
            padding: 12px;
            border-radius: 8px;
            margin-bottom: 20px;
            font-size: 14px;
        }

        .success-message {
            background: rgba(16, 185, 129, 0.1);
            border: 1px solid var(--accent-success);
            color: var(--accent-success);
            padding: 12px;
            border-radius: 8px;
            margin-bottom: 20px;
            font-size: 14px;
        }

        .loading {
            display: inline-block;
            width: 20px;
            height: 20px;
            border: 3px solid rgba(255, 255, 255, 0.3);
            border-radius: 50%;
            border-top-color: #fff;
            animation: spin 1s ease-in-out infinite;
        }

        @keyframes spin {
            to { transform: rotate(360deg); }
        }

        .hidden {
            display: none;
        }
    </style>
</head>

<body>
    <div class="login-container">
        <div class="logo-section">
            <div class="logo-icon">
                <i class="fas fa-robot"></i>
            </div>
            <h1 class="logo-title">Agent Skeleton OSS</h1>
            <p class="logo-subtitle">Agent IA autonome avec mémoire</p>
        </div>

        <div id="error-message" class="error-message hidden"></div>
        <div id="success-message" class="success-message hidden"></div>

        <!-- Formulaire de connexion -->
        <form id="login-form">
            <div class="form-group">
                <label class="form-label" for="username">Nom d'utilisateur</label>
                <input type="text" id="username" class="form-input" required>
            </div>
            
            <div class="form-group">
                <label class="form-label" for="password">Mot de passe</label>
                <input type="password" id="password" class="form-input" required>
            </div>
            
            <button type="submit" class="form-button" id="login-btn">
                <span class="btn-text">Se connecter</span>
                <span class="loading hidden"></span>
            </button>
        </form>

        <!-- Formulaire d'inscription -->
        <form id="register-form" class="hidden">
            <div class="form-group">
                <label class="form-label" for="reg-username">Nom d'utilisateur</label>
                <input type="text" id="reg-username" class="form-input" required minlength="3">
            </div>
            
            <div class="form-group">
                <label class="form-label" for="reg-email">Email</label>
                <input type="email" id="reg-email" class="form-input" required>
            </div>
            
            <div class="form-group">
                <label class="form-label" for="reg-password">Mot de passe</label>
                <input type="password" id="reg-password" class="form-input" required minlength="6">
            </div>
            
            <button type="submit" class="form-button" id="register-btn">
                <span class="btn-text">Créer un compte</span>
                <span class="loading hidden"></span>
            </button>
        </form>

        <div class="switch-mode">
            <span id="switch-text">Pas encore de compte ?</span>
            <a href="#" class="switch-link" id="switch-link">Créer un compte</a>
        </div>
    </div>

    <script>
        let isLoginMode = true;

        // Éléments DOM
        const loginForm = document.getElementById('login-form');
        const registerForm = document.getElementById('register-form');
        const switchLink = document.getElementById('switch-link');
        const switchText = document.getElementById('switch-text');
        const errorMessage = document.getElementById('error-message');
        const successMessage = document.getElementById('success-message');

        // Basculer entre connexion et inscription
        switchLink.addEventListener('click', (e) => {
            e.preventDefault();
            isLoginMode = !isLoginMode;
            
            if (isLoginMode) {
                loginForm.classList.remove('hidden');
                registerForm.classList.add('hidden');
                switchText.textContent = 'Pas encore de compte ?';
                switchLink.textContent = 'Créer un compte';
            } else {
                loginForm.classList.add('hidden');
                registerForm.classList.remove('hidden');
                switchText.textContent = 'Déjà un compte ?';
                switchLink.textContent = 'Se connecter';
            }
            
            hideMessages();
        });

        // Connexion
        loginForm.addEventListener('submit', async (e) => {
            e.preventDefault();
            
            const username = document.getElementById('username').value;
            const password = document.getElementById('password').value;
            
            await handleSubmit('/api/auth/login', { username, password }, 'login-btn');
        });

        // Inscription
        registerForm.addEventListener('submit', async (e) => {
            e.preventDefault();
            
            const username = document.getElementById('reg-username').value;
            const email = document.getElementById('reg-email').value;
            const password = document.getElementById('reg-password').value;
            
            await handleSubmit('/api/auth/register', { username, email, password }, 'register-btn');
        });

        async function handleSubmit(url, data, btnId) {
            const btn = document.getElementById(btnId);
            const btnText = btn.querySelector('.btn-text');
            const loading = btn.querySelector('.loading');
            
            // Afficher le loading
            btn.disabled = true;
            btnText.classList.add('hidden');
            loading.classList.remove('hidden');
            hideMessages();
            
            try {
                const response = await fetch(url, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify(data)
                });
                
                const result = await response.json();
                
                if (response.ok) {
                    if (url.includes('login')) {
                        showSuccess('Connexion réussie ! Redirection...');
                        setTimeout(() => {
                            window.location.href = '/';
                        }, 1500);
                    } else {
                        showSuccess('Compte créé avec succès ! Vous pouvez maintenant vous connecter.');
                        setTimeout(() => {
                            switchLink.click(); // Basculer vers la connexion
                        }, 2000);
                    }
                } else {
                    if (result.errors) {
                        showError(result.errors.map(e => e.msg).join(', '));
                    } else {
                        showError(result.error || 'Une erreur est survenue');
                    }
                }
            } catch (error) {
                showError('Erreur de connexion au serveur');
            } finally {
                // Cacher le loading
                btn.disabled = false;
                btnText.classList.remove('hidden');
                loading.classList.add('hidden');
            }
        }

        function showError(message) {
            errorMessage.textContent = message;
            errorMessage.classList.remove('hidden');
            successMessage.classList.add('hidden');
        }

        function showSuccess(message) {
            successMessage.textContent = message;
            successMessage.classList.remove('hidden');
            errorMessage.classList.add('hidden');
        }

        function hideMessages() {
            errorMessage.classList.add('hidden');
            successMessage.classList.add('hidden');
        }
    </script>
</body>
</html>